{"Protocols/ALTableViewLoadingDelegate.html#/c:objc(pl)ALTableViewLoadingDelegate(im)willLoadTableView":{"name":"-willLoadTableView","abstract":"<p>Override this method in your subclass to do custom work when the table view is about to load. This also includes when the user pulls the table to refresh.</p>","parent_name":"ALTableViewLoadingDelegate"},"Protocols/ALTableViewLoadingDelegate.html#/c:objc(pl)ALTableViewLoadingDelegate(im)didLoadTableViewWithError:":{"name":"-didLoadTableViewWithError:","abstract":"<p>Override this method in your subclass to do custom work as soon as the table loads. This also works when pagination is enabled and new content is added.</p>","parent_name":"ALTableViewLoadingDelegate"},"Protocols/ALImageViewLoadingDelegate.html#/c:objc(pl)ALImageViewLoadingDelegate(im)willLoadImageView:":{"name":"-willLoadImageView:","abstract":"<p>Implement this protocol to do custom work when the image view is about to load.</p>","parent_name":"ALImageViewLoadingDelegate"},"Protocols/ALImageViewLoadingDelegate.html#/c:objc(pl)ALImageViewLoadingDelegate(im)didLoadImageView:error:":{"name":"-didLoadImageView:error:","abstract":"<p>Implement this protocol to do custom work as soon as the image view loads.</p>","parent_name":"ALImageViewLoadingDelegate"},"Protocols/ALCollectionViewSizingDelegate.html#/c:objc(pl)ALCollectionViewSizingDelegate(im)collectionView:heightForItemAtIndexPath:itemInfo:":{"name":"-collectionView:heightForItemAtIndexPath:itemInfo:","abstract":"<p>Implement this method only if you&rsquo;re using Dynamic Height. Width will be automatically calculated by setting Columns property</p>","parent_name":"ALCollectionViewSizingDelegate"},"Protocols/ALCollectionViewSizingDelegate.html#/c:objc(pl)ALCollectionViewSizingDelegate(im)lineSpacingForDevice:orientation:":{"name":"-lineSpacingForDevice:orientation:","abstract":"<p>Implement this method if you wish to achieve different line spacing for different devices or orientations.</p>","parent_name":"ALCollectionViewSizingDelegate"},"Protocols/ALCollectionViewSizingDelegate.html#/c:objc(pl)ALCollectionViewSizingDelegate(im)interitemSpacingForDevice:orientation:":{"name":"-interitemSpacingForDevice:orientation:","abstract":"<p>Implement this method if you wish to achieve different inter-item spacing for different devices or orientations.</p>","parent_name":"ALCollectionViewSizingDelegate"},"Protocols/ALCollectionViewSizingDelegate.html#/c:objc(pl)ALCollectionViewSizingDelegate(im)insetForForDevice:orientation:":{"name":"-insetForForDevice:orientation:","abstract":"<p>Implement this method if you wish to achieve different inset spacing for different devices or orientations.</p>","parent_name":"ALCollectionViewSizingDelegate"},"Protocols/ALCollectionViewLoadingDelegate.html#/c:objc(pl)ALCollectionViewLoadingDelegate(im)willLoadCollectionView":{"name":"-willLoadCollectionView","abstract":"<p>Override this method in your subclass to do custom work when the table view is about to load. This also includes when the user pulls the table to refresh.</p>","parent_name":"ALCollectionViewLoadingDelegate"},"Protocols/ALCollectionViewLoadingDelegate.html#/c:objc(pl)ALCollectionViewLoadingDelegate(im)didLoadCollectionViewWithError:":{"name":"-didLoadCollectionViewWithError:","abstract":"<p>Override this method in your subclass to do custom work as soon as the table loads. This also works when pagination is enabled and new content is added.</p>","parent_name":"ALCollectionViewLoadingDelegate"},"Protocols/ALCollectionViewLoadingDelegate.html":{"name":"ALCollectionViewLoadingDelegate","abstract":"<p><code>ALCollectionViewLoadingDelegate</code> is a protocol that provide methods for the status of the collection view loading.</p>"},"Protocols/ALCollectionViewSizingDelegate.html":{"name":"ALCollectionViewSizingDelegate","abstract":"<p><code>ALCollectionViewSizingDelegate</code> is a protocol that provide methods for the sizing of the collection view.</p>"},"Protocols/ALImageViewLoadingDelegate.html":{"name":"ALImageViewLoadingDelegate","abstract":"<p><code>ALImageViewLoadingDelegate</code> is a protocol that provides method for loading status of image view so you can do your custom UI work.</p>"},"Protocols/ALTableViewLoadingDelegate.html":{"name":"ALTableViewLoadingDelegate","abstract":"<p><code>ALTableViewLoadingDelegate</code> is a protocol that provide methods for the status of the table view loading.</p>"},"Constants.html#/c:@AbstractLayerVersionNumber":{"name":"AbstractLayerVersionNumber","abstract":"<p>Project version number for AbstractLayer.</p>"},"Constants.html#/c:@AbstractLayerVersionString":{"name":"AbstractLayerVersionString","abstract":"<p>Project version string for AbstractLayer.</p>"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)loadingDelegate":{"name":"loadingDelegate","abstract":"<p>The loading delegate object</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)url":{"name":"url","abstract":"<p>The API URL that points to a JSON document.</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)httpMethod":{"name":"httpMethod","abstract":"<p>The HTTP method for the request built using a supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ALTableView.html#/c:objc(cs)ALTableView(py)url\">url</a></code>.</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)header":{"name":"header","abstract":"<p>The API request header</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)body":{"name":"body","abstract":"<p>The API request body parameters</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)jsonRoot":{"name":"jsonRoot","abstract":"<p>The root of the JSON array</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)cellIdentifier":{"name":"cellIdentifier","abstract":"<p>The cell identifier</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)pagination":{"name":"pagination","abstract":"<p>Set if pagination is enabled</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)pageParam":{"name":"pageParam","abstract":"<p>The parameter used to set page number</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)xib":{"name":"xib","abstract":"<p>The name of your cell XIB file</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)loader":{"name":"loader","abstract":"<p>Determines if table should show a loader before loading content</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)loaderColor":{"name":"loaderColor","abstract":"<p>Determines the color of the loader view</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)pullToRefresh":{"name":"pullToRefresh","abstract":"<p>Determines if table should refresh its content when pulled off screen</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)offlineBrowse":{"name":"offlineBrowse","abstract":"<p>Determines if the table should display cached result in network isn&rsquo;t reachable</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)authType":{"name":"authType","abstract":"<p>Authentication type</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)authKeys":{"name":"authKeys","abstract":"<p>Authentication keys</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)responseData":{"name":"responseData","abstract":"<p>The raw response data retrieved from the API call</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(py)array":{"name":"array","abstract":"<p>The array of objects retrieved from the API call</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(im)forceReloadData":{"name":"-forceReloadData","abstract":"<p>Resends the reqeust to the server and parses the new response disregarding cache options. Used when a parameter is changed and you want to invoke a reload method.</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(im)numberOfSections":{"name":"-numberOfSections","abstract":"<p>Returns the number of sections calculated from the JSON resopnse.</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(im)numberOfRowsInSection:":{"name":"-numberOfRowsInSection:","abstract":"<p>Returns the number of rows for section calculated from the JSON resopnse.</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(im)cellForRowAtIndexPath:":{"name":"-cellForRowAtIndexPath:","abstract":"<p>Returns the fully designed and implemented cell for index path.</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(im)heightForRowAtIndexPath:":{"name":"-heightForRowAtIndexPath:","abstract":"<p>Returns the height for the row calculated by Abstract Layer</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(im)commitEditingStyle:forRowAtIndexPath:":{"name":"-commitEditingStyle:forRowAtIndexPath:","abstract":"<p>Implement to auto-handle deleting a cell</p>","parent_name":"ALTableView"},"Classes/ALTableView.html#/c:objc(cs)ALTableView(im)moveRowAtIndexPath:toIndexPath:":{"name":"-moveRowAtIndexPath:toIndexPath:","abstract":"<p>Implement to move the item from one index path to another</p>","parent_name":"ALTableView"},"Classes/ALLabel.html#/c:objc(cs)ALLabel(py)jsonKey":{"name":"jsonKey","abstract":"<p>The JSON key that represents the value from the JSON document that needs to be reflected in this label.</p>","parent_name":"ALLabel"},"Classes/ALLabel.html#/c:objc(cs)ALLabel(py)prefix":{"name":"prefix","abstract":"<p>The string that needs to proceed the value parsed from the JSON document.</p>","parent_name":"ALLabel"},"Classes/ALLabel.html#/c:objc(cs)ALLabel(py)suffix":{"name":"suffix","abstract":"<p>The string that needs to succeed the value parsed from the JSON document.</p>","parent_name":"ALLabel"},"Classes/ALLabel.html#/c:objc(cs)ALLabel(py)pluralize":{"name":"pluralize","abstract":"<p>Determines if you need to handle singular/plural words in a label.</p>","parent_name":"ALLabel"},"Classes/ALImageView.html#/c:objc(cs)ALImageView(py)jsonKey":{"name":"jsonKey","abstract":"<p>The JSON key that represents the value from the JSON document that represents the image to be displayed.</p>","parent_name":"ALImageView"},"Classes/ALImageView.html#/c:objc(cs)ALImageView(py)delegate":{"name":"delegate","abstract":"<p>The delegate of ALImageView</p>","parent_name":"ALImageView"},"Classes/ALImageView.html#/c:objc(cs)ALImageView(im)willLoadImage":{"name":"-willLoadImage","abstract":"<p>Override this method in your subclass to do custom work when the image view is about to load.</p>","parent_name":"ALImageView"},"Classes/ALImageView.html#/c:objc(cs)ALImageView(im)didLoadImageWithError:":{"name":"-didLoadImageWithError:","abstract":"<p>Override this method in your subclass to do custom work as soon as the image view loads.</p>","parent_name":"ALImageView"},"Classes/ALDateLabel.html#/c:objc(cs)ALDateLabel(py)inputFormat":{"name":"inputFormat","abstract":"<p>The date format of the date received from JSON response according to the standard <code>UIDateFormatter</code></p>","parent_name":"ALDateLabel"},"Classes/ALDateLabel.html#/c:objc(cs)ALDateLabel(py)outputFormat":{"name":"outputFormat","abstract":"<p>The date format of the label you want to dispaly according to the standard <code>UIDateFormatter</code></p>","parent_name":"ALDateLabel"},"Classes/ALDateLabel.html#/c:objc(cs)ALDateLabel(py)date":{"name":"date","abstract":"<p>Represents the date that the label is displaying</p>","parent_name":"ALDateLabel"},"Classes/ALStore.html#/c:objc(cs)ALStore(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>Get the shared instance of ALStore</p>","parent_name":"ALStore"},"Classes/ALStore.html#/c:objc(cs)ALStore(im)setValue:forKey:":{"name":"-setValue:forKey:","abstract":"<p>Call this method to set the key/value pair to be stored locally.</p>","parent_name":"ALStore"},"Classes/ALStore.html#/c:objc(cs)ALStore(im)valueForKey:":{"name":"-valueForKey:","abstract":"<p>Call this method to get the value of a key stored locally via AbstractLayer.</p>","parent_name":"ALStore"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)loadingDelegate":{"name":"loadingDelegate","abstract":"<p>The loading delegate object</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)sizingDelegate":{"name":"sizingDelegate","abstract":"<p>The sizing delegate object</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)columns":{"name":"columns","abstract":"<p>Determines the number of columns in the Collection View</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)customHeight":{"name":"customHeight","abstract":"<p>Turn on if the items have different heights according to content</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)url":{"name":"url","abstract":"<p>The API URL that points to a JSON document.</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)httpMethod":{"name":"httpMethod","abstract":"<p>The HTTP method for the request built using a supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)url\">url</a></code>.</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)header":{"name":"header","abstract":"<p>The API request header</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)body":{"name":"body","abstract":"<p>The API request body parameters</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)jsonRoot":{"name":"jsonRoot","abstract":"<p>The root of the JSON array</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)cellIdentifier":{"name":"cellIdentifier","abstract":"<p>The cell identifier</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)pagination":{"name":"pagination","abstract":"<p>Set if pagination is enabled</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)pageParam":{"name":"pageParam","abstract":"<p>The parameter used to set page number</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)xib":{"name":"xib","abstract":"<p>The name of your cell XIB file</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)loader":{"name":"loader","abstract":"<p>Determines if table should show a loader before loading content</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)loaderColor":{"name":"loaderColor","abstract":"<p>Determines the color of the loader view</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)pullToRefresh":{"name":"pullToRefresh","abstract":"<p>Determines if table should refresh its content when pulled off screen</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)offlineBrowse":{"name":"offlineBrowse","abstract":"<p>Determines if collection should display cached result in network isn&rsquo;t reachable</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)authType":{"name":"authType","abstract":"<p>Authentication type</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)authKeys":{"name":"authKeys","abstract":"<p>Authentication keys</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)iPadPortrait":{"name":"iPadPortrait","abstract":"<p>The number of columns desired for iPad in portrait orientation</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)iPadLandscape":{"name":"iPadLandscape","abstract":"<p>The number of columns desired for iPad in landscape orientation</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)iPhoneLandscape":{"name":"iPhoneLandscape","abstract":"<p>The number of columns desired for iPhone in landscape orientation</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)responseData":{"name":"responseData","abstract":"<p>The raw response data retrieved from the API call</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(py)array":{"name":"array","abstract":"<p>The array of objects retrieved from the API call</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(im)forceReloadData":{"name":"-forceReloadData","abstract":"<p>Resends the reqeust to the server and parses the new response disregarding cache options. Used when a parameter is changed and you want to invoke a reload method.</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(im)numberOfSections":{"name":"-numberOfSections","abstract":"<p>Returns the number of sections calculated from the JSON resopnse.</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(im)numberOfItemsInSection:":{"name":"-numberOfItemsInSection:","abstract":"<p>Returns the number of items for section calculated from the JSON resopnse.</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(im)cellForItemAtIndexPath:":{"name":"-cellForItemAtIndexPath:","abstract":"<p>Returns the fully designed and implemented cell for index path.</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(im)sizeForItemAtIndexPath:":{"name":"-sizeForItemAtIndexPath:","abstract":"<p>Returns the size for the item calculated by Abstract Layer</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html#/c:objc(cs)ALCollectionView(im)moveItemAtIndexPath:toIndexPath:":{"name":"-moveItemAtIndexPath:toIndexPath:","abstract":"<p>Implement to move the item from one index path to another</p>","parent_name":"ALCollectionView"},"Classes/ALCollectionView.html":{"name":"ALCollectionView","abstract":"<p><code>ALTableViewController</code> is a subclass of <code>UITableViewController</code> with convenience properties for making HTTP requests. A <code>url</code> must be provided to successfully make a request out of the box.</p>"},"Classes/ALStore.html":{"name":"ALStore","abstract":"<p><code>ALStore</code> has convenience methods to store key/value pairs to be used as a parameter in interface builder. Mostly used with <code>ALTableViewController</code>.</p>"},"Classes/ALDateLabel.html":{"name":"ALDateLabel","abstract":"<p><code>ALDateLabel</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ALLabel.html\">ALLabel</a></code> with convenience properties to help display dates parsed from timestamps in any desired format complying with <code>UIDateFormatter</code> standards.</p>"},"Classes/ALImageView.html":{"name":"ALImageView","abstract":"<p><code>ALImageView</code> is a subclass of <code>UIImageView</code> with convenience properties to help display images fetched from a JSON document.</p>"},"Classes/ALLabel.html":{"name":"ALLabel","abstract":"<p><code>ALLabel</code> is a subclass of <code>UILabel</code> with convenience properties to help parse and edit outcomes visually. A <code>jsonKey</code> must be provided to successfully and dynamically do databinding within a <code>ALTableViewController</code>.</p>"},"Classes/ALTableView.html":{"name":"ALTableView","abstract":"<p><code>ALTableViewController</code> is a subclass of <code>UITableViewController</code> with convenience properties for making HTTP requests. A <code>url</code> must be provided to successfully make a request out of the box.</p>"},"Categories/UIImageView(Inspectable).html#/c:objc(cs)UIImageView(py)circular":{"name":"circular","abstract":"<p>Turn on if you want the image view to become circular</p>","parent_name":"UIImageView(Inspectable)"},"Categories/UIImageView(Inspectable).html#/c:objc(cs)UIImageView(py)cornerRadius":{"name":"cornerRadius","abstract":"<p>Set this to any value above 0 to give your image view a corner radius</p>","parent_name":"UIImageView(Inspectable)"},"Categories/UIImageView(Inspectable).html":{"name":"UIImageView(Inspectable)","abstract":"<p>Inspectable is a public category on UIImageView with convenience properties to help adjust the looks of the image view all the way from a cornder radius to a complete circual look.</p>"},"Categories.html":{"name":"Categories","abstract":"<p>The following categories are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}