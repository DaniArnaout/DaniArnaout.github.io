{"Constants.html#/c:@CodepackVersionNumber":{"name":"CodepackVersionNumber","abstract":"<p>Project version number for Codepack.</p>"},"Constants.html#/c:@CodepackVersionString":{"name":"CodepackVersionString","abstract":"<p>Project version string for Codepack.</p>"},"Classes/CPLabel.html#/c:objc(cs)CPLabel(py)jsonKey":{"name":"jsonKey","abstract":"<p>The JSON key that represents the value from the JSON document that needs to be reflected in this label.</p>","parent_name":"CPLabel"},"Classes/CPLabel.html#/c:objc(cs)CPLabel(py)prefix":{"name":"prefix","abstract":"<p>The string that needs to proceed the value parsed from the JSON document.</p>","parent_name":"CPLabel"},"Classes/CPLabel.html#/c:objc(cs)CPLabel(py)suffix":{"name":"suffix","abstract":"<p>The string that needs to succeed the value parsed from the JSON document.</p>","parent_name":"CPLabel"},"Classes/CPLabel.html#/c:objc(cs)CPLabel(py)pluralize":{"name":"pluralize","abstract":"<p>Determines if you need to handle singular/plural words in a label.</p>","parent_name":"CPLabel"},"Classes/CPImageView.html#/c:objc(cs)CPImageView(py)jsonKey":{"name":"jsonKey","abstract":"<p>The JSON key that represents the value from the JSON document that represents the image to be displayed.</p>","parent_name":"CPImageView"},"Classes/CPDateLabel.html#/c:objc(cs)CPDateLabel(py)dateFormat":{"name":"dateFormat","abstract":"<p>The date format according to the standard <code>UIDateFormatter</code></p>","parent_name":"CPDateLabel"},"Classes/CPDateLabel.html#/c:objc(cs)CPDateLabel(py)type":{"name":"type","abstract":"<p>The type of date to be dispalyed</p>","parent_name":"CPDateLabel"},"Classes/CPDateLabel.html#/c:objc(cs)CPDateLabel(im)formattedDateString:":{"name":"-formattedDateString:","abstract":"<p>This method formats a timestamp into a desired string that uses the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CPDateLabel.html#/c:objc(cs)CPDateLabel(py)dateFormat\">dateFormat</a></code> provided.</p>","parent_name":"CPDateLabel"},"Classes/CPStore.html#/c:objc(cs)CPStore(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>Get the shared instance of CPStore</p>","parent_name":"CPStore"},"Classes/CPStore.html#/c:objc(cs)CPStore(im)setValue:forKey:":{"name":"-setValue:forKey:","abstract":"<p>Call this method to set the key/value pair to be stored locally.</p>","parent_name":"CPStore"},"Classes/CPStore.html#/c:objc(cs)CPStore(im)valueForKey:":{"name":"-valueForKey:","abstract":"<p>Call this method to get the value of a key stored locally via Codepack.</p>","parent_name":"CPStore"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)url":{"name":"url","abstract":"<p>The API URL that points to a JSON document.</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)httpMethod":{"name":"httpMethod","abstract":"<p>The HTTP method for the request built using a supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)url\">url</a></code>.</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)header":{"name":"header","abstract":"<p>The API request header</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)body":{"name":"body","abstract":"<p>The API request body parameters</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)jsonRoot":{"name":"jsonRoot","abstract":"<p>The root of the JSON array</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)pagination":{"name":"pagination","abstract":"<p>Set if pagination is enabled</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)pageParam":{"name":"pageParam","abstract":"<p>The parameter used to set page number</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)xib":{"name":"xib","abstract":"<p>The name of your cell XIB file</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)loader":{"name":"loader","abstract":"<p>Determines if table should show a loader before loading content</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)loaderColor":{"name":"loaderColor","abstract":"<p>Determines the color of the loader view</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)pullToRefresh":{"name":"pullToRefresh","abstract":"<p>Determines if table should refresh its content when pulled off screen</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)authType":{"name":"authType","abstract":"<p>Authentication type</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)authKeys":{"name":"authKeys","abstract":"<p>Authentication keys</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(py)array":{"name":"array","abstract":"<p>The array of objects retrieved from the API call</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(im)willLoadTableView":{"name":"-willLoadTableView","abstract":"<p>Override this method in your subclass to do custom work when the table view is about to load. This also includes when the user pulls the table to refresh.</p>","parent_name":"CPTableViewController"},"Classes/CPTableViewController.html#/c:objc(cs)CPTableViewController(im)didLoadTableViewWithError:":{"name":"-didLoadTableViewWithError:","abstract":"<p>Override this method in your subclass to do custom work as soon as the table loads. This also works when pagination is enabled and new content is added.</p>","parent_name":"CPTableViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)columns":{"name":"columns","abstract":"<p>Determines the number of columns in the Collection View</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)customHeight":{"name":"customHeight","abstract":"<p>Turn on if the items have different heights according to content</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)url":{"name":"url","abstract":"<p>The API URL that points to a JSON document.</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)httpMethod":{"name":"httpMethod","abstract":"<p>The HTTP method for the request built using a supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)url\">url</a></code>.</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)header":{"name":"header","abstract":"<p>The API request header</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)body":{"name":"body","abstract":"<p>The API request body parameters</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)jsonRoot":{"name":"jsonRoot","abstract":"<p>The root of the JSON array</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)pagination":{"name":"pagination","abstract":"<p>Set if pagination is enabled</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)pageParam":{"name":"pageParam","abstract":"<p>The parameter used to set page number</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)xib":{"name":"xib","abstract":"<p>The name of your cell XIB file</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)loader":{"name":"loader","abstract":"<p>Determines if table should show a loader before loading content</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)loaderColor":{"name":"loaderColor","abstract":"<p>Determines the color of the loader view</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)pullToRefresh":{"name":"pullToRefresh","abstract":"<p>Determines if table should refresh its content when pulled off screen</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)authType":{"name":"authType","abstract":"<p>Authentication type</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)authKeys":{"name":"authKeys","abstract":"<p>Authentication keys</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(py)array":{"name":"array","abstract":"<p>The array of objects retrieved from the API call</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(im)willLoadCollectionView":{"name":"-willLoadCollectionView","abstract":"<p>Override this method in your subclass to do custom work when the table view is about to load. This also includes when the user pulls the table to refresh.</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(im)didLoadCollectionViewWithError:":{"name":"-didLoadCollectionViewWithError:","abstract":"<p>Override this method in your subclass to do custom work as soon as the table loads. This also works when pagination is enabled and new content is added.</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html#/c:objc(cs)CPCollectionViewController(im)collectionView:heightForItemAtIndexPath:itemInfo:":{"name":"-collectionView:heightForItemAtIndexPath:itemInfo:","abstract":"<p>Implement this method only if you&rsquo;re using Dynamic Height. Width will be automatically calculated by setting Columns property</p>","parent_name":"CPCollectionViewController"},"Classes/CPCollectionViewController.html":{"name":"CPCollectionViewController","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CPTableViewController.html\">CPTableViewController</a></code> is a subclass of <code>UITableViewController</code> with convenience properties for making HTTP requests. A <code>url</code> must be provided to successfully make a request out of the box.</p>"},"Classes/CPTableViewController.html":{"name":"CPTableViewController","abstract":"<p><code>CPTableViewController</code> is a subclass of <code>UITableViewController</code> with convenience properties for making HTTP requests. A <code>url</code> must be provided to successfully make a request out of the box.</p>"},"Classes/CPStore.html":{"name":"CPStore","abstract":"<p><code>CPStore</code> has convenience methods to store key/value pairs to be used as a parameter in interface builder. Mostly used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CPTableViewController.html\">CPTableViewController</a></code>.</p>"},"Classes/CPDateLabel.html":{"name":"CPDateLabel","abstract":"<p><code>CPDateLabel</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CPLabel.html\">CPLabel</a></code> with convenience properties to help display dates parsed from timestamps in any desired format complying with <code>UIDateFormatter</code> standards.</p>"},"Classes/CPImageView.html":{"name":"CPImageView","abstract":"<p><code>CPImageView</code> is a subclass of <code>UIImageView</code> with convenience properties to help display images fetched from a JSON document.</p>"},"Classes/CPLabel.html":{"name":"CPLabel","abstract":"<p><code>CPLabel</code> is a subclass of <code>UILabel</code> with convenience properties to help parse and edit outcomes visually. A <code>jsonKey</code> must be provided to successfully and dynamically do databinding within a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CPTableViewController.html\">CPTableViewController</a></code>.</p>"},"Categories/UIImageView(Inspectable).html#/c:objc(cs)UIImageView(py)circular":{"name":"circular","abstract":"<p>Turn on if you want the image view to become circular</p>","parent_name":"UIImageView(Inspectable)"},"Categories/UIImageView(Inspectable).html#/c:objc(cs)UIImageView(py)cornerRadius":{"name":"cornerRadius","abstract":"<p>Set this to any value above 0 to give your image view a corner radius</p>","parent_name":"UIImageView(Inspectable)"},"Categories/UIImageView(Inspectable).html":{"name":"UIImageView(Inspectable)","abstract":"<p>Inspectable is a public category on UIImageView with convenience properties to help adjust the looks of the image view all the way from a cornder radius to a complete circual look.</p>"},"Categories.html":{"name":"Categories","abstract":"<p>The following categories are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"}}